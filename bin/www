#!/usr/bin/env node

/**
 * Module Deps
 */

const app = require('../app');
const debug = require('debug')('mean-app:server');
const http = require('http');


/**
 * Get Port from env and store in express
 */
const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

/**
 * Create HTTP Server
 */
const server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize port into a number, string or false
 */

function normalizePort(val) {
	const portIn = parseInt(val, 10);

	if (isNaN(portIn)) {
		return val;
	}

	if (portIn >= 0) {
		return portIn;
	}

	return false;
}

function onError(error) {
	if (err.syscall !== 'listen') {
		throw error;
	}

	const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' requires elevated priveledges.');
			process.exit(1);
			break;
		case 'EADDRINUSE':
			console.log(bind + ' is already in use.');
			process.exit(1);
			break;
		default:
			throw error;
	}
}

function onListening() {
	const addr = server.address();
	const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;

	debug('Listening on ' + bind);
}